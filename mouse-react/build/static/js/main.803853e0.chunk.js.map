{"version":3,"sources":["js/modules/Home.js","js/util/Rules.js","js/util/System.js","js/util/SocketUtil.js","js/util/GameUtil.js","js/modules/canvas/CanvasUtil.js","js/modules/ui/Instructions.js","js/modules/ui/Lobby.js","js/modules/canvas/Canvas.js","js/modules/ui/Controls.js","js/modules/Room.js","App.js","reportWebVitals.js","index.js"],"names":["INPUT_CSS","Home","name","setName","room","useParams","useState","navigate","setNavigate","code","setCode","useEffect","document","title","handleKeyPress","event","key","to","className","type","placeholder","onChange","target","value","onKeyPress","autoFocus","DEFAULTS","GRID","WIDTH","HEIGHT","STEP","Math","floor","console","warn","DEPLOYED","STRIPPED_HOME_URL","replace","SOCKET","io","transports","canvasUtil","this","canvas","ctx","img","Image","update","colors","clear","rect","canvasRef","current","log","parent","parentElement","getContext","fillStyle","fillRect","w","h","toDataURL","data","onload","drawImage","width","height","src","requestAnimationFrame","render","x","y","color","translate","strokeStyle","lineWidth","strokeRect","setTransform","c","PLAYER","id","position","alive","PLAYERS","BLOCKS","PICKUPS","BOMB","LIMIT","PAUSED","isPlayerBlockColliding","block","playerX","playerY","BETWEEN_X","BETWEEN_Y","isTouching","item1","item2","SAME_SPOT","UP_SPOT","DOWN_SPOT","LEFT_SPOT","RIGHT_SPOT","setPlayer","player","setPlayerPositions","players","onDeath","handlePlayerDeath","setPause","bool","LAST","ELAPSED","animate","time","pickupKeys","Object","keys","i","length","p","handlePickups","outline","handlePlayers","drawPlayer","handleOutOfBounds","elapsed","velocity","age","handleBlocks","Instructions","Lobby","children","handleChange","map","isPlayer","style","selected","picker","nickname","Canvas","onMouseMove","onKey","zoomMultiplier","useRef","focus","init","setCanvas","transform","clientX","clientY","offsetTop","offsetLeft","onKeyDown","onContextMenu","preventDefault","tabIndex","ref","Controls","onPress","handleControls","onTouchStart","Room","view","setView","host","setHost","setPlayers","setColor","bomb","setBomb","setZoomMultiplier","shake","setShake","endScreenMsg","setEndScreenMsg","endScreenVisible","setEndScreenVisible","emit","on","response","end","message","playersList","difficulty","game","blocks","pickups","limit","handleShake","handleDeath","handleStart","handleKey","setKeys","handleColorChange","setPlayerColor","setTimeout","handleEndScreen","classNames","onClick","timer","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.803853e0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link, useParams, Navigate } from 'react-router-dom';\r\n\r\nconst INPUT_CSS = \"text-input large bold\";\r\n\r\n/*\r\n  Display home screen\r\n  - prompt user for display name\r\n  - prompt user for room code if prompted\r\n*/\r\nconst Home = ({ name, setName }) => {\r\n  const { room } = useParams();\r\n  const [navigate, setNavigate] = useState(null);\r\n  const [code, setCode] = useState(room);\r\n\r\n  useEffect(() => {\r\n    document.title = room || \"block\";\r\n  }, [room]);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if((event.key === \"Enter\") && name && code) {\r\n      setNavigate(<Navigate to={`/${code}`}/>)\r\n    }\r\n  }\r\n\r\n  if(navigate) return navigate;\r\n  return (\r\n    <div className=\"home\">\r\n      <input \r\n        className={INPUT_CSS} \r\n        type=\"text\" \r\n        placeholder=\"name\"\r\n        onChange={(event) => { setName(event.target.value )}} \r\n        onKeyPress={room ? handleKeyPress : null}\r\n        autoFocus\r\n      />\r\n      { !room &&\r\n        <input \r\n          className={INPUT_CSS + (name || code ? \"\" : \" hide\")} \r\n          type=\"text\" \r\n          placeholder=\"room code\" \r\n          onChange={(event) => { setCode(event.target.value) }} \r\n          onKeyPress={room ? handleKeyPress : null}\r\n        />\r\n      }\r\n      <Link className={\"round-btn medium\" + (name && code ? \"\" : \" hide\")} to={`/${code}`}> join </Link> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","export const DEFAULTS = {\r\n  WIDTH               : 735,\r\n  HEIGHT              : 735,\r\n  STEP                : 15,\r\n  COLOR               : \"#3c3cff\",\r\n  MAX_AGE             : 500\r\n}\r\n\r\nexport const GRID = {\r\n  WIDTH   : DEFAULTS.WIDTH / DEFAULTS.STEP,\r\n  HEIGHT  : DEFAULTS.HEIGHT / DEFAULTS.STEP,\r\n  STEP    : DEFAULTS.STEP\r\n}\r\n\r\nexport const SPAWN = {\r\n  x : Math.floor(GRID.WIDTH / 2) * GRID.STEP,\r\n  y : Math.floor(GRID.HEIGHT / 2) * GRID.STEP\r\n}\r\n\r\nif(DEFAULTS.WIDTH % DEFAULTS.STEP || DEFAULTS.WIDTH % DEFAULTS.STEP) {\r\n  console.warn(\"Height or width must be divisible by step\");\r\n}","const DEV = false;\r\n\r\nconst LOCAL_CLIENT = \"http://localhost:3000\";\r\nconst LOCAL_SERVER = \"http://localhost:3300\";\r\n\r\nconst DEPLOYED = \"https://block10.herokuapp.com\";\r\n\r\nexport const HOME_URL = DEV ? LOCAL_CLIENT : DEPLOYED;\r\nexport const SERVER_URL = DEV ? LOCAL_SERVER : DEPLOYED;\r\n\r\nexport const STRIPPED_HOME_URL = HOME_URL?.replace(\"http://\",\"\").replace(\"https://\",\"\");","import io from 'socket.io-client';\r\nimport { SERVER_URL } from './System.js';\r\n\r\nconst DOMAIN = SERVER_URL;\r\n\r\nexport const SOCKET = io(DOMAIN, { transports: ['websocket']});","import { DEFAULTS, GRID } from './Rules.js';\r\nimport CanvasUtil from '../modules/canvas/CanvasUtil.js';\r\nconst canvasUtil = new CanvasUtil();\r\n\r\n\r\nlet PLAYER = { id: null, position: { x : null, y : null}, color: DEFAULTS.COLOR, alive: true }\r\nlet PLAYERS = {};\r\nlet BLOCKS = {};\r\nlet PICKUPS = {};\r\nlet BOMB = {};\r\nlet LIMIT = 0;\r\n\r\n\r\nlet PAUSED = false;\r\n\r\n\r\nexport const reset = () => {\r\n  PLAYER = { ...PLAYER, alive: true };\r\n  BLOCKS = {};\r\n  PICKUPS = {};\r\n  BOMB = {};\r\n  LIMIT = 0;\r\n}\r\n\r\n/*** CANVAS ***/\r\n\r\nexport const setCanvas = (canvasRef) => {\r\n  canvasUtil.init(canvasRef);\r\n  canvasUtil.clear();\r\n}\r\n\r\nexport const drawPlayer = () => {\r\n  if(!PLAYER.alive) return;\r\n\r\n  const { x, y } = PLAYER.position;\r\n  canvasUtil.rect(x, y, GRID.STEP, GRID.STEP, PLAYER.color);\r\n\r\n  if(BOMB?.id === PLAYER.id) canvasUtil.outline(x, y, GRID.STEP, GRID.STEP, \"RED\");\r\n}\r\n\r\nexport const drawBlock = (block) => {\r\n  canvasUtil.rect(block.x, block.y, block.width, block.height, block.color);\r\n}\r\n\r\n\r\n/*** HANDLERS ***/\r\n\r\n// moves blocks and checks if they're expired\r\nconst handleBlocks = (elapsed) => {\r\n  const keys = Object.keys(BLOCKS);\r\n  if(keys.length > 100) console.log(\"BLOCKS array is getting quite large! @ \", keys.length);\r\n  \r\n  for(var i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    BLOCKS[key].x += BLOCKS[key].velocity.x * elapsed;\r\n    BLOCKS[key].y += BLOCKS[key].velocity.y * elapsed;\r\n    BLOCKS[key].age += elapsed;\r\n    \r\n    drawBlock(BLOCKS[key]);\r\n    if(isPlayerBlockColliding(BLOCKS[key])) handlePlayerDeath();\r\n    if(BLOCKS[key].age > DEFAULTS.MAX_AGE) delete BLOCKS[key];\r\n  }\r\n}\r\n\r\nconst handlePlayers = () => {\r\n  for(const p in PLAYERS) {\r\n    const player = PLAYERS[p];\r\n    \r\n    if(PLAYER.id !== player.id && player.alive) {\r\n      if(isTouching(player.position, PLAYER)) console.log(\"TOUCHING PLAYERS\");\r\n      canvasUtil.rect(player.position.x, player.position.y, GRID.STEP, GRID.STEP, player.color);\r\n      if(BOMB?.id === player.id) canvasUtil.outline(player.position.x, player.position.y, GRID.STEP, GRID.STEP, \"RED\");\r\n    }\r\n  }\r\n}\r\n\r\n// check if a player activates a pickup\r\nconst handlePickups = () => {\r\n  const pickupKeys = Object.keys(PICKUPS);\r\n  for(var i = 0; i < pickupKeys.length; i++) {\r\n    const p = pickupKeys[i];\r\n    const { x, y, color } = PICKUPS[p];\r\n    canvasUtil.rect(x, y, GRID.STEP, GRID.STEP, color);\r\n  }\r\n}\r\n\r\n// check if player is out of bounds\r\nconst handleOutOfBounds = () => {\r\n  const playerX = PLAYER.position.x;\r\n  const playerY = PLAYER.position.y;\r\n  \r\n  const BELOW_X = playerX < (LIMIT * GRID.STEP);\r\n  const ABOVE_X = playerX >= DEFAULTS.WIDTH - (LIMIT * GRID.STEP);\r\n\r\n  const BELOW_Y = playerY < (LIMIT * GRID.STEP);\r\n  const ABOVE_Y = playerY >= DEFAULTS.HEIGHT - (LIMIT * GRID.STEP);\r\n  if(BELOW_X || ABOVE_X || BELOW_Y || ABOVE_Y) handlePlayerDeath();\r\n}\r\n\r\n\r\n// checks if a block is colliding with the player\r\nconst isPlayerBlockColliding = (block) => {\r\n  const playerX = PLAYER.position.x;\r\n  const playerY = PLAYER.position.y;\r\n\r\n  const BETWEEN_X = block.x <= playerX && playerX < block.x + block.width;\r\n  const BETWEEN_Y = block.y <= playerY && playerY < block.y + block.height;\r\n  return BETWEEN_X && BETWEEN_Y;\r\n}\r\n\r\n// checks if two items of the same size are touching (e.g pickups and players)\r\nconst isTouching = (item1, item2) => {\r\n  const SAME_SPOT = (item1.x === item2.x) && (item1.y === item2.y);\r\n  const UP_SPOT = (item1.x === item2.x) && (item1.y - GRID.STEP === item2.y);\r\n  const DOWN_SPOT = (item1.x === item2.x) && (item1.y + GRID.STEP === item2.y);\r\n  const LEFT_SPOT = (item1.x - GRID.STEP === item2.x) && (item1.y === item2.y);\r\n  const RIGHT_SPOT = (item1.x + GRID.STEP === item2.x) && (item1.y === item2.y);\r\n\r\n  return SAME_SPOT || UP_SPOT || DOWN_SPOT || LEFT_SPOT || RIGHT_SPOT;\r\n}\r\n\r\n\r\n/*** SETTERS ***/\r\n\r\n\r\nexport const setPlayer = (player) => {\r\n  PLAYER = { ...PLAYER, ...player};\r\n}\r\n\r\nexport const setPlayerColor = (color) => {\r\n  PLAYER.color = color;\r\n}\r\n\r\nexport const setPlayerSpawn = (position) => {\r\n  PLAYER.position = position;\r\n}\r\n\r\nexport const setKeys = (key) => {\r\n  if(!PLAYER.alive || PAUSED) return;\r\n  \r\n  if(key === \"w\" || key === \"ArrowUp\") PLAYER.position.y -= GRID.STEP;\r\n  if(key === \"s\" || key === \"ArrowDown\") PLAYER.position.y += GRID.STEP;\r\n  if(key === \"a\" || key === \"ArrowLeft\") PLAYER.position.x -= GRID.STEP;\r\n  if(key === \"d\" || key === \"ArrowRight\") PLAYER.position.x += GRID.STEP;\r\n  return PLAYER.position;\r\n}\r\n\r\nexport const setPlayerPositions = (players) => {\r\n  PLAYERS = players;\r\n}\r\n\r\nexport const setGame = (game) => {\r\n  BLOCKS = {...game?.blocks, ...BLOCKS};\r\n  PICKUPS = game?.pickups;\r\n  BOMB = game?.bomb;\r\n  LIMIT = game?.limit;\r\n}\r\n\r\n\r\n\r\n/*** DEATH ***/\r\n\r\nlet onDeath = null;\r\n\r\nexport const setOnDeath = (func) => {\r\n  onDeath = func;\r\n}\r\n\r\nconst handlePlayerDeath = () => {\r\n  if(!PLAYER.alive) return;\r\n\r\n  PLAYER.alive = false;\r\n  if(onDeath) onDeath();\r\n}\r\n\r\n\r\n\r\n/*** GAMELOOP ***/\r\n\r\n\r\nexport const setPause = (bool) => {\r\n  PAUSED = bool\r\n}\r\n\r\nlet LAST = 0, ELAPSED = 0;\r\nexport const animate = () => {\r\n  const render = (time) => {\r\n    ELAPSED = (time - LAST) / 16;\r\n    LAST = time;\r\n\r\n    if(!PAUSED)  {\r\n      canvasUtil.clear();\r\n      handlePickups();\r\n      handlePlayers();\r\n      drawPlayer();\r\n      handleOutOfBounds();\r\n      handleBlocks(ELAPSED);\r\n    }\r\n\r\n    // canvasUtil.rect(LIMIT * GRID.STEP, LIMIT * GRID.STEP, DEFAULTS.WIDTH - (LIMIT * GRID.STEP * 2), DEFAULTS.WIDTH - (LIMIT * GRID.STEP * 2), \"rgb(0,0,0,.3)\");\r\n\r\n    requestAnimationFrame(render);\r\n  }\r\n\r\n  requestAnimationFrame(render);\r\n}","class CanvasUtil {\r\n  constructor() {\r\n    this.canvas = null;\r\n    this.ctx = null;\r\n\r\n    this.img = new Image();\r\n    this.update = false;\r\n\r\n    this.colors = {\r\n      clear: \"WHITE\",\r\n      rect: \"BLACK\"\r\n    }\r\n  }\r\n\r\n  /*\r\n    canvasRef : react ref to canvas element\r\n  */\r\n  init(canvasRef) {\r\n    if(!canvasRef?.current) {\r\n      console.log(\"Could not initialize Canvas\");\r\n      return;\r\n    }\r\n    \r\n    console.log(\"Initializing Canvas\");\r\n    \r\n    this.canvas = canvasRef.current;\r\n    this.parent = canvasRef.current.parentElement;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n    this.clear();\r\n  }\r\n\r\n  clear() {\r\n    if(!this.canvas) return;\r\n\r\n    this.ctx.fillStyle = this.colors.clear;\r\n    this.ctx.fillRect(0,0, this.w(), this.h())\r\n  }\r\n\r\n\r\n  getData() {\r\n    if(!this.canvas) return;\r\n    return this.canvas.toDataURL();\r\n  }\r\n\r\n  setData(data) {\r\n    if(!this.canvas) return;\r\n\r\n    var img = new Image();\r\n    img.onload = () => {\r\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n    this.img.src = data;\r\n\r\n    this.update = true;\r\n  }\r\n\r\n  draw() {\r\n    if(!this.canvas) return;\r\n\r\n    const render = () => {\r\n        if(this.update){  // only raw if needed\r\n          this.update = false;\r\n          this.ctx.drawImage(this.img, 0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n        requestAnimationFrame(render);\r\n    }\r\n    requestAnimationFrame(render);\r\n  }\r\n  \r\n  rect(x, y, width, height, color) {\r\n    this.ctx.fillStyle = color || this.colors.rect ;\r\n    this.ctx.fillRect(x, y, width, height);\r\n  }\r\n\r\n  outline(x, y, width, height, color ){\r\n    this.ctx.translate(.5,.5);\r\n    this.ctx.strokeStyle = color || this.colors.rect ;\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.strokeRect(x, y, width, height);\r\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  }\r\n  \r\n  w() { return this.canvas.width; }\r\n  h() { return this.canvas.height }\r\n\r\n  setColors(c) {\r\n    this.colors = { ...this.colors, ...c};\r\n  }\r\n}\r\n\r\nexport default CanvasUtil;","const Instructions = () => {\r\n  return (\r\n    <div className=\"flex-col\">\r\n      <p className=\"small bold center-text\"> A random player starts off as the bomb. </p>\r\n      <p className=\"small bold center-text\"> Touch a yellow square to transfer the bomb to someone else before the timer runs out. </p>\r\n      <p className=\"small bold center-text\"> Non-bombers can steal yellow squares from the bomb. </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Instructions;","const Lobby = ({ id, players, children, color, onChange }) => {\r\n  const handleChange = (event) => {\r\n    if(onChange) onChange(event.target.value);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"lobby flex-col flex-fill\">\r\n      <div className=\"player-list flex-col\"> \r\n        { players?.map((p) => {\r\n          const isPlayer = p.id === id;\r\n          const style = { color : p.color };\r\n          const selected = isPlayer ? \" bold\" : \"\";\r\n          const picker = isPlayer  ? (\r\n            <span> <input type=\"color\" value={color} onChange={handleChange}/> </span>\r\n          ) : null;\r\n            return <label className={\"flex medium\" + selected} key={p.id} style={style}> {p.nickname} {picker} </label> \r\n          }\r\n        )}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Lobby;","import { useEffect, useRef } from 'react';\r\n\r\nimport { animate, setCanvas } from '../../util/GameUtil.js';\r\nimport { DEFAULTS } from '../../util/Rules.js';\r\n\r\nconst Canvas = ({ width, height, onMouseMove, onKey, zoomMultiplier, className}) => {\r\n  const canvasRef = useRef(null);\r\n  const position = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if(!canvasRef.current) return;\r\n    \r\n    canvasRef.current.focus();\r\n    setCanvas(canvasRef);\r\n    animate();\r\n  }, [width, height])\r\n\r\n  const handleMouseMove = (event) => {\r\n    if(!onMouseMove) return;\r\n\r\n    const { clientX, clientY } = event;\r\n    const { offsetTop, offsetLeft } = event.target;\r\n\r\n    const x = clientX - offsetLeft\r\n    const y = clientY - offsetTop;\r\n\r\n    position.current = { x, y };\r\n    if(onMouseMove) onMouseMove(position.current);\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if(onKey) onKey(event.key);\r\n  }\r\n\r\n  const prevent = (event) => { event.preventDefault() }\r\n\r\n  const scale = DEFAULTS.WIDTH / (DEFAULTS.WIDTH - zoomMultiplier * DEFAULTS.STEP * 2);\r\n  const style = {\r\n   transform: `scale(${scale})`\r\n  }\r\n\r\n  return (\r\n    <div className=\"canvas-wrapper\">\r\n      <canvas \r\n        className={className || \"\"}\r\n        width={DEFAULTS.WIDTH} \r\n        height={DEFAULTS.HEIGHT} \r\n        onMouseMove={handleMouseMove}\r\n        onKeyDown={handleKeyDown}\r\n        onContextMenu={prevent}\r\n        tabIndex={1}\r\n        ref={canvasRef}\r\n        style={style}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Canvas;","/*\r\n  Mobile controls that makes use of onTouchStart to work around 300ms delay on safari IOS\r\n*/\r\n\r\nconst Controls = ({ onPress }) => {\r\n  const handleControls = (event) => {\r\n    const { id } = event.target;\r\n    if(onPress) onPress(id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex mobile controls\">\r\n      <button id=\"a\" onTouchStart={handleControls}></button>\r\n      <div className=\"flex-col\">\r\n        <button id=\"w\" onTouchStart={handleControls}></button>\r\n        <button id=\"s\" onTouchStart={handleControls}></button>\r\n      </div>\r\n      <button id=\"d\" onTouchStart={handleControls}></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls;","import { useState, useEffect } from 'react';\r\nimport { useParams, Navigate } from 'react-router-dom';\r\n\r\nimport { DEFAULTS } from '../util/Rules.js';\r\n\r\nimport { STRIPPED_HOME_URL } from '../util/System.js';\r\nimport { SOCKET } from '../util/SocketUtil.js';\r\n\r\nimport { reset, setPlayer, setPlayerSpawn, setPlayerColor, setKeys, setPlayerPositions, setGame, setOnDeath, setPause } from '../util/GameUtil.js';\r\n\r\nimport Instructions from './ui/Instructions.js';\r\nimport Lobby from './ui/Lobby.js';\r\nimport Canvas from './canvas/Canvas.js';\r\nimport Controls from './ui/Controls.js';\r\n\r\nconst Room = ({ name }) => {\r\n  const { room } = useParams();\r\n  \r\n  const [view, setView] = useState(0);\r\n  const [host, setHost] = useState(null);\r\n  const [players, setPlayers] = useState(null);\r\n  const [color, setColor] = useState(DEFAULTS.COLOR);\r\n  \r\n  const [bomb, setBomb] = useState(null);\r\n  const [zoomMultiplier, setZoomMultiplier] = useState(0);\r\n  const [shake, setShake] = useState(null);\r\n\r\n  const [endScreenMsg, setEndScreenMsg] = useState(null);\r\n  const [endScreenVisible, setEndScreenVisible] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if(!name) return;\r\n\r\n    SOCKET.emit('SET_NICK', name);\r\n    SOCKET.emit('JOIN_ROOM', room);\r\n\r\n    SOCKET.on('START_GAME', () => {\r\n      setView(1);\r\n      setEndScreenVisible(false);\r\n      setPause(false);\r\n    });\r\n\r\n    SOCKET.on('ROOM_UPDATE', (response) => {\r\n      if(response.end) {\r\n        setEndScreenMsg(response.message)\r\n        setPause(true);\r\n        setEndScreenVisible(true);\r\n        reset();\r\n      }\r\n  \r\n      setHost(response?.host);\r\n      setPlayers(response?.playersList);\r\n  \r\n      setPlayerPositions(response?.players);\r\n      setPlayerSpawn(response?.players[SOCKET.id]?.position);\r\n      if(response?.difficulty > 0) setView(1);\r\n    });\r\n\r\n    SOCKET.on('GENERATION', (response) => {\r\n      setGame(response);\r\n      setZoomMultiplier(response?.limit);\r\n      setBomb(response.bomb);\r\n    });\r\n\r\n    SOCKET.on('POSITIONS', setPlayerPositions);\r\n\r\n    SOCKET.on('PLAYER_COLORS', (response) => {\r\n      setPlayers(response.playersList)\r\n      setPlayerPositions(response.players);\r\n    });\r\n\r\n    SOCKET.on('EXPLODE', () => {\r\n      setPlayer({ alive: false });\r\n      handleShake();\r\n    });\r\n    \r\n  }, [room, name]);\r\n\r\n  useEffect(() => {\r\n    setPlayer({ id: SOCKET.id });\r\n    setOnDeath(handleDeath);\r\n  }, []);\r\n\r\n  const handleStart = () => {\r\n    SOCKET.emit('START_GAME');\r\n  }\r\n\r\n  /*\r\n  const handleMouseMove = (position) => {\r\n    setPlayerPosition(position.x, position.y)\r\n    SOCKET.emit('PLAYER_POSITION', position);\r\n  }\r\n  */\r\n\r\n  const handleKey = (key) => {\r\n    const position = setKeys(key);\r\n    if(position) SOCKET.emit('PLAYER_POSITION', position);\r\n  }\r\n\r\n  const handleColorChange = (color) => {\r\n    setColor(color);\r\n    setPlayerColor(color);\r\n    SOCKET.emit(\"PLAYER_COLOR\", color);\r\n  }\r\n\r\n  const handleDeath = () => {\r\n    SOCKET.emit(\"PLAYER_DEATH\");\r\n    handleShake();\r\n  }\r\n\r\n  const handleShake = () => {\r\n    setShake(\"animate-shake\");\r\n    setTimeout(() => { setShake(null) }, 500);\r\n  }\r\n\r\n  const handleEndScreen = () => {\r\n    setEndScreenVisible(false);\r\n    setBomb(0);\r\n    setView(0);\r\n    setZoomMultiplier(0);\r\n    setPause(false);\r\n  }\r\n\r\n  const getView = () => {\r\n    if(view === 1) {\r\n      return (\r\n        <div className=\"game flex-col flex-fill\">\r\n          { endScreenVisible &&\r\n            <div className=\"end-screen flex-col\">\r\n              <label className=\"huge bold\"> {endScreenMsg} </label>\r\n              <button className=\"round-btn large bold\" onClick={handleEndScreen}> back to lobby </button>\r\n            </div>\r\n          }\r\n          <label className=\"large bold center-text\"> {bomb?.timer} <> &mdash; </> {bomb?.nickname} </label>\r\n          <Canvas className={shake} onKey={handleKey} zoomMultiplier={zoomMultiplier}/>\r\n          <Controls onPress={handleKey}/>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"flex-col flex-fill\">\r\n          <label className=\"large bold center-text\"> {STRIPPED_HOME_URL}/{room} </label>\r\n          <Instructions/>\r\n          <Lobby id={SOCKET.id} players={players} color={color} onChange={handleColorChange}>\r\n            { (host?.id === SOCKET.id) &&\r\n              <button className=\"round-btn large bold\" onClick={handleStart}> start </button>\r\n            }\r\n          </Lobby>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  if(!name) return <Navigate to={`/${room}/@`}/>\r\n\r\n  let classNames = \"room flex-col flex-fill\" + (view === 1 ? \" dark\" : \"\");\r\n  return (\r\n    <div className={classNames}>\r\n      {getView()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Room;","import './css/main.css';\r\n\r\nimport { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './js/modules/Home.js';\r\nimport Room from './js/modules/Room.js';\r\n\r\nconst App = () => {\r\n  const [name, setName] = useState(null); // user's display name\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home name={name} setName={setName}/>}/>\r\n          <Route path=\"/:room/@\" element={<Home name={name} setName={setName}/>}/>\r\n          <Route path=\"/:room\" element={<Room name={name}/>}/>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}